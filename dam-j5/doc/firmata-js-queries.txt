reportVersion = function(callback) {
queryFirmware = function(callback) {
analogRead = function(pin, callback) {
analogWrite = function(pin, value) {
pwmWrite = Board.prototype.analogWrite;
servoConfig = function(pin, min, max) {
servoWrite = function(pin, value) {
pinMode = function(pin, mode) {
digitalWrite = function(pin, value) {
digitalRead = function(pin, callback) {
queryCapabilities = function(callback) {
queryAnalogMapping = function(callback) {
queryPinState = function(pin, callback) {
sendString = function(string) {
sendI2CConfig = function(delay) {
i2cConfig = function(options) {
sendI2CWriteRequest = function(slaveAddress, bytes) {
i2cWrite = function(address, registerOrData, inBytes) {
i2cWriteReg = function(address, register, byte) {
sendI2CReadRequest = function(address, numBytes, callback) {
i2cRead = function(address, register, bytesToRead, callback) {
i2cReadOnce = function(address, register, bytesToRead, callback) {
sendOneWireConfig = function(pin, enableParasiticPower) {
sendOneWireSearch = function(pin, callback) {
sendOneWireAlarmsSearch = function(pin, callback) {
_sendOneWireSearch = function(type, event, pin, callback) {
sendOneWireRead = function(pin, device, numBytesToRead, callback) {
sendOneWireReset = function(pin) {
sendOneWireWrite = function(pin, device, data) {
sendOneWireDelay = function(pin, delay) {
sendOneWireWriteAndRead = function(pin, device, data, numBytesToRead, callback) {
_sendOneWireRequest = function(pin, subcommand, device, numBytesToRead, correlationId, delay, dataToWrite, event, callback) {
setSamplingInterval = function(interval) {
getSamplingInterval = function(interval) {
reportAnalogPin = function(pin, value) {
reportDigitalPin = function(pin, value) {
pingRead = function(opts, callback) {
stepperConfig = function(deviceNum, type, stepsPerRev, dirOrMotor1Pin, stepOrMotor2Pin, motor3Pin, motor4Pin) {
stepperStep = function(deviceNum, direction, steps, speed, accel, decel, callback) {
reset = function() {
