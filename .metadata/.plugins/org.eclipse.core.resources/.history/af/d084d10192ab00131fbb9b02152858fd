/*
 ============================================================================
 Name        : dap.c
 Author      : Doug Johnson
 Version     :
 Copyright   : GPL
 Description : I2C Data Acquisition
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <linux/i2c.h>
#include <linux/i2c-dev.h>

typedef struct device {
	char *name;
	int bus;
	int address;
} device;

device accel;

char *busname[] = {"/dev/i2c-0","/dev/i2c-1","/dev/i2c-2"};

int main(int argc, char* argv[]) {
	printf("DAP - I2C Data Acquisition Program\n");

	// print some info about the targeted device

	accel.name = "LSM303 Accelerometer";
	accel.bus = 1;
	accel.address = 0x19;

	printf("Device: %s at Bus %i, Address %#x.\n",accel.name,accel.bus,accel.address);

	// set control registers

	// 0x20 CTRL_REF1_A - power, rate

	return EXIT_SUCCESS;
}

int readAllRegisters(device d) {

	 int file;
	    if ((file = open(busname[d.bus], O_RDWR)) < 0){
	            cout << "Failed to open BMA180 Sensor on " << namebuf << " I2C Bus" << endl;
	            return(1);
	    }
	    if (ioctl(file, I2C_SLAVE, I2CAddress) < 0){
	            cout << "I2C_SLAVE address " << I2CAddress << " failed..." << endl;
	            return(2);
	    }


}
